module data_mem(input clk,input mem_read,input mem_write,input [3:0]addr,input [7:0]write_data,output reg[7:0]read_data);
reg [7:0]memory[0:15];
initial begin
    memory[0] = 8'd0;
    memory[1] = 8'd0;
    memory[2] = 8'd0;
    memory[3] = 8'd0;
    memory[4] = 8'd0;
    memory[5] = 8'd0; 
    memory[6] = 8'd0; 
    memory[7] = 8'd0;
    memory[8] = 8'd0;
    memory[9] = 8'd0;
    memory[10] = 8'd0;
    memory[11] = 8'd0;
    memory[12] = 8'd0;
    memory[13] = 8'd0;
    memory[14] = 8'd0;
    memory[15] = 8'd0;
end

always@(posedge clk)begin
if(mem_write)
memory[addr]<=write_data;
end
always@(*)begin
if(mem_read)
read_data=memory[addr];
else
read_data=8'b0;
end
endmodule
